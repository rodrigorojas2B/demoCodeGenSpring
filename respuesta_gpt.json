{
  "id": "chatcmpl-BgfTOAyGHv3WL6mETYCkoRhqQrzsO",
  "object": "chat.completion",
  "created": 1749508898,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "package test.core.api.model;\n\nimport java.time.LocalDate;\n\npublic class Employee {\n\n    private Long id;\n    private String name;\n    private String gender;\n    private LocalDate birthDate;\n\n    // Getters and Setters\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getGender() {\n        return gender;\n    }\n\n    public void setGender(String gender) {\n        this.gender = gender;\n    }\n\n    public LocalDate getBirthDate() {\n        return birthDate;\n    }\n\n    public void setBirthDate(LocalDate birthDate) {\n        this.birthDate = birthDate;\n    }\n}\n\npackage test.core.api.repository;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\nimport test.core.api.model.Employee;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\n@Repository\npublic interface EmployeeRepository extends JpaRepository<Employee, Long> {\n    List<Employee> findByBirthDateBefore(LocalDate date);\n}\n\npackage test.core.api.exception;\n\npublic class CannotDeleteEmployeeException extends RuntimeException {\n    public CannotDeleteEmployeeException(String message) {\n        super(message);\n    }\n}\n\npackage test.core.api.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport test.core.api.exception.CannotDeleteEmployeeException;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\n@Service\npublic class EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    public void deleteEmployee(Long id) {\n        Employee employee = employeeRepository.findById(id).orElse(null);\n        if (employee != null && \"Femenino\".equalsIgnoreCase(employee.getGender())) {\n            throw new CannotDeleteEmployeeException(\"Cannot delete female employee\");\n        }\n        employeeRepository.deleteById(id);\n    }\n\n    public List<Employee> getEmployeesBornBefore2000() {\n        return employeeRepository.findByBirthDateBefore(LocalDate.of(2000, 1, 1));\n    }\n}\n\npackage test.core.api.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RestController;\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\n\nimport java.util.List;\n\n@RestController\npublic class EmployeeController {\n\n    @Autowired\n    private EmployeeService employeeService;\n\n    @DeleteMapping(\"/employees/{id}\")\n    public ResponseEntity<Void> deleteEmployee(@PathVariable Long id) {\n        employeeService.deleteEmployee(id);\n        return ResponseEntity.ok().build();\n    }\n\n    @GetMapping(\"/employees/born-before-2000\")\n    public ResponseEntity<List<Employee>> getEmployeesBornBefore2000() {\n        List<Employee> employees = employeeService.getEmployeesBornBefore2000();\n        return ResponseEntity.ok(employees);\n    }\n}\n\npackage test.core.api.service;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport test.core.api.exception.CannotDeleteEmployeeException;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n@SpringBootTest\npublic class EmployeeServiceTest {\n\n    @Autowired\n    private EmployeeService employeeService;\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Test\n    public void testDeleteEmployee() {\n        Employee employee = new Employee();\n        employee.setGender(\"Femenino\");\n        employee = employeeRepository.save(employee);\n\n        assertThrows(CannotDeleteEmployeeException.class, () -> employeeService.deleteEmployee(employee.getId()));\n    }\n\n    @Test\n    public void testGetEmployeesBornBefore2000() {\n        Employee employee = new Employee();\n        employee.setBirthDate(LocalDate.of(1999, 12, 31));\n        employee = employeeRepository.save(employee);\n\n        List<Employee> employees = employeeService.getEmployeesBornBefore2000();\n        assertTrue(employees.contains(employee));\n    }\n}\n\npackage test.core.api.controller;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.boot.test.web.client.TestRestTemplate;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\n\nimport java.time.LocalDate;\n\nimport static org.junit.jupiter.api.Assertions.*;\n\n@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\npublic class EmployeeControllerTest {\n\n    @Autowired\n    private TestRestTemplate restTemplate;\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Test\n    public void testDeleteEmployee() {\n        Employee employee = new Employee();\n        employee.setGender(\"Femenino\");\n        employee = employeeRepository.save(employee);\n\n        ResponseEntity<Void> response = restTemplate.postForEntity(\"/employees/\" + employee.getId(), null, Void.class);\n        assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());\n    }\n\n    @Test\n    public void testGetEmployeesBornBefore2000() {\n        Employee employee = new Employee();\n        employee.setBirthDate(LocalDate.of(1999, 12, 31));\n        employee = employeeRepository.save(employee);\n\n        ResponseEntity<Employee[]> response = restTemplate.getForEntity(\"/employees/born-before-2000\", Employee[].class);\n        assertEquals(HttpStatus.OK, response.getStatusCode());\n        assertTrue(response.getBody().length > 0);\n    }\n}",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 1432,
    "completion_tokens": 1128,
    "total_tokens": 2560,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
