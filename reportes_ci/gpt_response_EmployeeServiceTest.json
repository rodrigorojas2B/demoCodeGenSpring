{
  "id": "chatcmpl-BgfEJa3kn21nOLXSdgZIVAMrMm0eC",
  "object": "chat.completion",
  "created": 1749507963,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "package test.core.api.service;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport test.core.api.exception.CannotDeleteEmployeeException;\nimport test.core.api.model.Employee;\nimport java.util.List;\nimport static org.junit.jupiter.api.Assertions.*;\n\n@SpringBootTest\nclass EmployeeServiceTest {\n    @Autowired\n    private EmployeeService employeeService;\n\n    @Test\n    void deleteEmployee_FemaleEmployee_ThrowsException() {\n        Employee femaleEmployee = new Employee();\n        femaleEmployee.setGender(\"Femenino\");\n        String id = femaleEmployee.getId();\n        assertThrows(CannotDeleteEmployeeException.class, () -> employeeService.deleteEmployee(id));\n    }\n\n    @Test\n    void getEmployeesBornBefore2000_ReturnsEmployees() {\n        List<Employee> employees = employeeService.getEmployeesBornBefore2000();\n        assertFalse(employees.isEmpty());\n        assertTrue(employees.stream().allMatch(e -> e.getBirthDate().getYear() < 2000));\n    }\n}",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 1276,
    "completion_tokens": 204,
    "total_tokens": 1480,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
