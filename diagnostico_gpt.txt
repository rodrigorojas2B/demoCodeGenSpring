--- ANÁLISIS DE CLASES EXISTENTES ---

| Clase Java | Package | Clasificación | Motivo |
|------------|---------|----------------|--------|
| Employee | test.core.api.model | REUTILIZABLE-AS-IS | Contiene atributos `gender` y `birthDate` necesarios para las historias de usuario. |
| EmployeeRepository | test.core.api.repository | REUTILIZABLE-AS-IS | Se necesita para realizar operaciones CRUD en la base de datos. |
| EmployeeCoreApiApplication | test.core.api | REUTILIZABLE-AS-IS | Clase principal de la aplicación Spring Boot. |
| EmployeeService | N/A | NUEVA | Se necesita para implementar la lógica de negocio de las historias de usuario. |
| EmployeeController | N/A | NUEVA | Se necesita para exponer los endpoints de las historias de usuario. |
| CannotDeleteEmployeeException | N/A | NUEVA | Se necesita para lanzar una excepción cuando se intenta eliminar un empleado femenino. |
| EmployeeServiceTest | N/A | NUEVA | Se necesita para realizar pruebas unitarias de la lógica de negocio. |
| EmployeeControllerTest | N/A | NUEVA | Se necesita para realizar pruebas de integración de los endpoints. |

--- INSTRUCCIONES DE MODIFICACIÓN ---
- En la clase `EmployeeRepository`, se debe agregar un nuevo método para obtener los empleados que nacieron antes del año 2000.
- Se debe crear la clase `EmployeeService` con los métodos para eliminar un empleado y obtener los empleados que nacieron antes del año 2000. En el método de eliminación, se debe agregar la validación para prevenir la eliminación de empleados femeninos.
- Se debe crear la clase `EmployeeController` con los endpoints para eliminar un empleado y obtener los empleados que nacieron antes del año 2000.
- Se debe crear la clase `CannotDeleteEmployeeException` para lanzar una excepción cuando se intenta eliminar un empleado femenino.
- Se deben crear las clases `EmployeeServiceTest` y `EmployeeControllerTest` para realizar pruebas unitarias y de integración, respectivamente.
