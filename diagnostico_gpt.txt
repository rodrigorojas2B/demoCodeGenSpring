--- ANÁLISIS DE CLASES EXISTENTES ---
Genera una tabla Markdown como esta:

| Clase Java | Package | Clasificación | Motivo |
|------------|---------|----------------|--------|
| Employee | test.core.api.model | REUTILIZABLE-AS-IS | Contiene atributo `gender` y `birthDate` necesarios para las historias de usuario |
| EmployeeRepository | test.core.api.repository | REUTILIZABLE-AS-IS | Se necesita para realizar operaciones CRUD en la base de datos |
| EmployeeCoreApiApplication | test.core.api | REUTILIZABLE-AS-IS | Clase principal de la aplicación |
| EmployeeService | NUEVA | NUEVA | Se necesita para implementar la lógica de negocio |
| EmployeeController | NUEVA | NUEVA | Se necesita para exponer los endpoints de la API |
| CannotDeleteEmployeeException | NUEVA | NUEVA | Se necesita para lanzar una excepción cuando se intenta eliminar un empleado femenino |
| EmployeeServiceTest | NUEVA | NUEVA | Se necesita para realizar pruebas unitarias de la lógica de negocio |
| EmployeeControllerTest | NUEVA | NUEVA | Se necesita para realizar pruebas de los endpoints de la API |

--- INSTRUCCIONES DE MODIFICACIÓN ---
- No eliminar ni reemplazar lógica existente.
- Si se modifica un método, incluirlo completo con el nuevo código y lo que ya tenía.
- Solo generar clases nuevas si están indicadas como NUEVA.
- Cada clase debe estar en su package correcto, según lo indicado en la tabla.
- NO repetir clases ya existentes si no cambian.
- NO eliminar los métodos existentes a menos que sea necesario
- NO reemplazar métodos u otro contenido de las clases existentes por comentarios entre líneas
- Solo considerar como existente una clase si está listada explícitamente en "CLASES DISPONIBLES EN EL PROYECTO".
- No debes asumir la existencia de clases que no aparecen explícitamente en la sección anterior. Si alguna clase no está listada entre las clases disponibles ni aparece en el código entregado, debe considerarse INEXISTENTE y marcada como NUEVA en el análisis.
- Si una clase no aparece listada, asumir que es NUEVA.
- Si una clase herada de otra clase o importa una interfaz propia del proyecto asegúrate que esta esté entre las clases existentes o genera el código respectivo de no existir previamente
