{
  "id": "chatcmpl-BghbMNissYgEx8sBpTxv32Ww380mL",
  "object": "chat.completion",
  "created": 1749517080,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "--- ARCHIVO: src/main/java/test/core/api/model/Employee.java ---\n```java\npackage test.core.api.model;\n\nimport java.io.Serializable;\nimport java.time.LocalDate;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"employee\")\npublic class Employee implements Serializable {\n\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\n\tprivate String firstName;\n\tprivate String middleName;\n\tprivate String lastName;\n\tprivate String secondLastName;\n\tprivate Integer age;\n\tprivate String gender;\n\tprivate LocalDate birthDate;\n\tprivate String position;\n\n\tpublic Long getId() {\n\t\treturn id;\n\t}\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\tpublic String getFirstName() {\n\t\treturn firstName;\n\t}\n\tpublic void setFirstName(String firstName) {\n\t\tthis.firstName = firstName;\n\t}\n\tpublic String getMiddleName() {\n\t\treturn middleName;\n\t}\n\tpublic void setMiddleName(String middleName) {\n\t\tthis.middleName = middleName;\n\t}\n\tpublic String getLastName() {\n\t\treturn lastName;\n\t}\n\tpublic void setLastName(String lastName) {\n\t\tthis.lastName = lastName;\n\t}\n\tpublic String getSecondLastName() {\n\t\treturn secondLastName;\n\t}\n\tpublic void setSecondLastName(String secondLastName) {\n\t\tthis.secondLastName = secondLastName;\n\t}\n\tpublic Integer getAge() {\n\t\treturn age;\n\t}\n\tpublic void setAge(Integer age) {\n\t\tthis.age = age;\n\t}\n\tpublic String getGender() {\n\t\treturn gender;\n\t}\n\tpublic void setGender(String gender) {\n\t\tthis.gender = gender;\n\t}\n\tpublic LocalDate getBirthDate() {\n\t\treturn birthDate;\n\t}\n\tpublic void setBirthDate(LocalDate birthDate) {\n\t\tthis.birthDate = birthDate;\n\t}\n\tpublic String getPosition() {\n\t\treturn position;\n\t}\n\tpublic void setPosition(String position) {\n\t\tthis.position = position;\n\t}\n}\n```\n\n--- ARCHIVO: src/main/java/test/core/api/repository/EmployeeRepository.java ---\n```java\npackage test.core.api.repository;\n\nimport org.springframework.data.repository.PagingAndSortingRepository;\nimport test.core.api.model.Employee;\nimport java.util.List;\n\npublic interface EmployeeRepository extends PagingAndSortingRepository<Employee, Long> {\n    @Override\n    List<Employee> findAll();\n}\n```\n\n--- ARCHIVO: src/main/java/test/core/api/EmployeeCoreApiApplication.java ---\n```java\npackage test.core.api;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.scheduling.annotation.EnableAsync;\n\n@SpringBootApplication\n@EnableAsync\npublic class EmployeeCoreApiApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(EmployeeCoreApiApplication.class, args);\n\t}\n}\n```\n\n--- ARCHIVO: src/main/java/test/core/api/controller/EmployeeController.java ---\n```java\npackage test.core.api.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/api/employees\")\npublic class EmployeeController {\n    @Autowired\n    private EmployeeService employeeService;\n    \n    @DeleteMapping(\"/{id}\")\n    public void deleteEmployee(@PathVariable Long id) {\n        employeeService.deleteEmployee(id);\n    }\n    \n    @GetMapping(\"/born-before-2000\")\n    public List<Employee> getEmployeesBornBefore2000() {\n        return employeeService.getEmployeesBornBefore2000();\n    }\n}\n```\n\n--- ARCHIVO: src/main/java/test/core/api/service/EmployeeService.java ---\n```java\npackage test.core.api.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\nimport test.core.api.exception.CannotDeleteEmployeeException;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Service\npublic class EmployeeService {\n    @Autowired\n    private EmployeeRepository employeeRepository;\n    \n    public void deleteEmployee(Long id) {\n        Employee employee = employeeRepository.findById(id).orElse(null);\n        if (employee != null) {\n            if (\"Femenino\".equals(employee.getGender())) {\n                throw new CannotDeleteEmployeeException(\"No se puede eliminar un empleado de g√©nero femenino\");\n            }\n            employeeRepository.delete(employee);\n        }\n    }\n    \n    public List<Employee> getEmployeesBornBefore2000() {\n        return employeeRepository.findAll().stream()\n                .filter(employee -> employee.getBirthDate().getYear() < 2000)\n                .collect(Collectors.toList());\n    }\n}\n```\n\n--- ARCHIVO: src/main/java/test/core/api/exception/CannotDeleteEmployeeException.java ---\n```java\npackage test.core.api.exception;\n\npublic class CannotDeleteEmployeeException extends RuntimeException {\n    public CannotDeleteEmployeeException(String message) {\n        super(message);\n    }\n}\n```",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 1620,
    "completion_tokens": 989,
    "total_tokens": 2609,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
